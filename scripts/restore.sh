#!/bin/bash
# =====================================================================================
# üîÑ restore.sh - Script de restaura√ß√£o dos symlinks dos dotfiles
#
# Cria e restaura os links simb√≥licos das configura√ß√µes personalizadas:
# - Backup autom√°tico das configura√ß√µes existentes
# - Cria√ß√£o de symlinks baseada no symlinks.conf
# - Restaura√ß√£o do Zsh com novas configura√ß√µes
# - Relat√≥rio detalhado das opera√ß√µes realizadas
#
# Uso: ./restore.sh (chamado automaticamente pelo install.sh e dotupdate)
# Autor: Paulo Luiz Fachini <paulofachini@gmail.com>
# Data: Outubro 2025
# Vers√£o: 1.1.0
# Licen√ßa: MIT
# Depend√™ncias: zsh
# =====================================================================================

BACKUP_DIR="$HOME/.backup_dotfiles_$(date +%Y%m%d_%H%M%S)"
DOTFILES_DIR="$HOME/.dotfiles"
ZSH_DIR="$DOTFILES_DIR/zsh"
CONFIG_FILE="$DOTFILES_DIR/symlinks.conf"

# Fun√ß√£o para criar symlinks e fazer backup de arquivos existentes
create_symlink() {
    local source_file=$1
    local target_file=$2

    # Se o alvo existe, n√£o √© um symlink e √© um arquivo regular, fa√ßa backup
    if [ -f "$target_file" ] && [ ! -L "$target_file" ]; then
        echo "üîπ Encontrado arquivo existente em $target_file. Fazendo backup..."
        mkdir -p "$BACKUP_DIR"
        mv "$target_file" "$BACKUP_DIR/"
        echo "‚úÖ Backup criado em $BACKUP_DIR"
    fi

    # Cria ou substitui o symlink
    ln -sf "$source_file" "$target_file"
    echo "üîó Symlink criado: $target_file -> $source_file"
}

echo "üì¶ Instalando os dotfiles no $HOME..."

if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå Arquivo de configura√ß√£o de symlinks n√£o encontrado em $CONFIG_FILE"
    exit 1
fi

# Ler o arquivo de configura√ß√£o e criar os links
while read -r source_path target_path; do
    # Ignorar linhas em branco ou coment√°rios
    [[ -z "$source_path" || "$source_path" == \#* ]] && continue

    create_symlink "$DOTFILES_DIR/$source_path" "$HOME/$target_path"
done < "$CONFIG_FILE"

# Criar cache do Powerlevel10k
mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}"

echo "‚úÖ dotfiles instalado com sucesso!"
